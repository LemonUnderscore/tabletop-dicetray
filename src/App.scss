//theme
$accentColour: #FFD33E;
$menuHigh: #666B7A;
$menuLow: #1D1E22;
$menuBackground: #121417;
$mainBackground: #333642;
$button-colours: (
    d100: #a972ca,
    d20: #ef6eaa, 
    d12: #ff7f84, 
    d10: #ffa268, 
    d8: #e4cb53, 
    d6: #8fc865, 
    d4: #19bc8c
);

html {
    scroll-behavior: smooth;
}

body, button {
    font-family: Arial, Helvetica, sans-serif;
    font-weight: bold;
    color: white;
}

button {
    background: $menuLow;
    border: none;
    font-size: 1.25rem;
    transition: .25s;
    cursor: pointer;
}

.diceTray {
    width: 100%;
    height: 100vh;
    background-color: $mainBackground;
    overflow: scroll;
    overflow-x: hidden;
    box-shadow: inset 0px 0px 80px -10px black;
    position: absolute;
    display: grid;
    place-items: center;
    z-index: -1;

    .trayContainer {
        position: relative;
        width: 80%;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;

        .diceBox:hover {
            .dice {
                filter: drop-shadow(0px 0px 15px white);
            }
        }

        .maxRoll {
            animation: maxRoll .5s ease-in-out forwards;
            animation-delay: 1s;
        }

        .minRoll {
            animation: minRoll .5s ease-in-out forwards;
            animation-delay: 1s;
        }

        .diceContext {
            position: absolute;
            width: 10rem;
            margin-right: 1rem;
            z-index: 1;

            button {
                font-size: 1.5rem;
                width: 2rem;
                height: 2rem;
                border-radius: 50%;
                cursor: pointer;
            }

            .rerollButton {
                float: right;
            }
        }

        .dice {
            color: black;
            position: relative;
            height: 8rem;
            width: 8rem;
            margin: 1rem;
            transform-origin: center;
            will-change: transform;
            transition: 0.5s;

            .diceText {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -60%);
                font-weight: bolder;
                font-size: 1.2rem;
                margin-top: 5%;
                animation: reveal 0.8s ease-in-out
            }

            .d20icon {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 100%;
                height: 100%;
                color: white;
                z-index: -1;
                filter: drop-shadow(0px 0px 15px black);
            }
        }
    }
}

.diceMenu {
    background: $menuLow;
    box-shadow: 0px 0px 60px -10px black;
    position: fixed;
    width: 6rem;
    height: 100vh;
    box-sizing: border-box;

    .buttonContainer {
        height: 60%;
        display: flex;
        flex-direction: column;

        button {
            height: (100% / 7);
        }
    }

    @each $type, $colour in $button-colours {
        .diceButton-#{$type} {
            --fill: #{$colour};
            border:5px solid $colour;
        }
    }

    .modifierMenu {

        height: 40%;
        display: flex;
        flex-direction: column;

        .customDice {
            height: 30%;
            background: $menuLow;
            border: 5px solid $menuHigh;

            input {
                height: 40%;
                border: none;
                border-bottom: 1px solid $menuHigh;
            }

            .customButton {
                height: 60%;
                width: 100%;
            }
        }

        .modMenuButton {
            height: 25%;
            background: $menuLow;
            border: 5px solid $menuHigh;
        }
    
        input {
            box-sizing: border-box;
            color: white;
            background: $menuLow;
            border: 5px solid $menuHigh;
            text-align: center;
            width: 100%;
            height: 20%;
            font-size: 2rem;
        }
    
        ::placeholder {
            font-size: .8rem;
            font-weight: bolder;
        }
    }

    .customButton:hover, .modMenuButton:hover {
        color: white;
        background: $menuHigh;
    }

    button:hover {
        background: var(--fill);
        filter: brightness(120%);
        color: black;
        font-size: 1.5rem;
    }

}

.totalMenu {
    background-color: $menuLow;
    position: fixed;
    right: 2%;
    bottom: 2%;
    width: 10vw;
    height: 20vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 5px solid $menuHigh;
    border-radius: 5px;
    box-shadow: 0px 0px 60px -10px black,
                inset 0px 0px 60px -10px black;

    .totalTitle {
        height: 15%;
        width: 90%;
        padding: 1%;
        display: grid;
        place-items: center;
        border-bottom: 1px solid gray;
    }

    .totalResult {
        height: 55%;
        display: grid;
        place-items: center;
        font-size: 4rem;
        width: 90%;
        border-bottom: 1px solid gray;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;

        .animatedTotal {
            max-width: 100%;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
    }
    
    .totalSum {
        height: 30%;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;

        .animatedSum, .animatedMod {
            max-width: 40%;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
    }
}

// animations
@keyframes roll {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(1080deg); }
}

@keyframes blur {
    0% { filter: blur(0px); }
    50% { filter: blur(5px); }
    100% { filter: blur(0px); }
}

@keyframes reveal {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes maxRoll {
    0% { filter: drop-shadow(); }
    100% { filter: drop-shadow(0px 0px 15px yellow); }
}

@keyframes minRoll {
    0% { filter: drop-shadow(); }
    100% { filter: drop-shadow(0px 0px 15px red); }
}
